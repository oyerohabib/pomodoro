@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --bg-color-1: rgb(186 73 73);
    --bg-color-2: rgb(56 133 138);
    --bg-color-3: rgb(57 112 151);

    --primary-color: var(--bg-color-1);
}

body {
    /* Typography */
    font-size: 1rem;
    font-weight: normal;
    font-family: 'Roboto', 'ui-sans-serif', 'system-ui', 'sans-serif',
        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
        'Noto Color Emoji';

    /* Colors */
    background-color: var(--primary-color, rgb(186 73 73));
    transition: background-color 500ms ease;

    /* Others */
    -webkit-tap-highlight-color: transparent;
}

body:has(dialog[open]) {
    overflow: hidden;
}

mark {
    background: linear-gradient(
        -100deg,
        hsla(48, 92%, 75%, 0.3),
        hsla(48, 92%, 75%, 0.7) 95%,
        hsla(48, 92%, 75%, 0.1)
    );
    border-radius: 1rem 0;
    padding: 0.25rem;
}

/* Composition */
/* Stack */
.stack {
    /* ↓ The grid context */
    display: grid;
    row-gap: var(--gap, 1.5rem);
}

.stack > * {
    /* ↓ Any extant vertical margins are removed */
    margin-block: 0;
}

/* Box */
.box {
    /* ↓ Padding set to the first point on the modular scale */
    padding-block: var(--padding-block);
    padding-inline: var(--padding-inline);
    /* ↓ Assumes you have a --border-thin var */
    border: var(--border-thin) solid;
    /* ↓ Always apply the transparent outline, for high contrast mode */
    outline: var(--border-thin) transparent;
    outline-offset: calc(var(--border-thin) * -1);

    color: var(--color, black);
    background-color: var(--bg-color, transparent);
}

/* Center */
.center {
    /* ↓ Remove padding from the width calculation */
    box-sizing: content-box;
    /* ↓ The maximum width is the maximum measure */
    max-inline-size: var(--max, 60ch);
    /* ↓ Only affect horizontal margins */
    margin-inline: auto;
    /* ↓ Apply the minimum horizontal space */
    padding-inline: var(--s1);
}

/* Utility */
.to-right {
    margin-left: auto;
}

.to-left {
    margin-right: auto;
}

.active {
    background-color: rgb(0 0 0 / 0.15);
    font-weight: bold;
    opacity: 1;
}

.text-primary {
    color: var(--primary-color);
}

.form-control {
    --form-control-color: rgb(30 30 30);

    display: grid;
    grid-template-columns: 1em auto;
    align-items: center;
    gap: 0.75em;
    color: var(--form-control-color);
}

input[type='checkbox'] {
    appearance: none;
    background-color: #fff;
    margin: 0;
    font: inherit;
    color: currentColor;
    width: 1.15em;
    height: 1.15em;
    border: 0.15em solid currentColor;
    border-radius: 0.15em;

    display: grid;
    place-content: center;
}

input[type='checkbox']::before {
    content: '';
    width: 0.65em;
    height: 0.65em;
    transform: scale(0);
    transition: 120ms transform ease-in-out;

    box-shadow: inset 1em 1em var(--form-control-color);
    /* windows high contrast mode */
    background-color: CanvasText;

    transform-origin: bottom left;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

input[type='checkbox']:checked::before {
    transform: scale(1);
}

input[type='checkbox']:focus {
    --outline-size: max(2px, 0.15em);
    outline: var(--outline-size) solid currentColor;
    outline-offset: var(--outline-size);
}

input[type='number'] {
    /* Spacing */
    width: 100%;
    padding: 0.625rem;
    /* Colors */
    background-color: rgb(203 213 225);
    /* Others */
    border-radius: 0.5rem;
}

input[type='number']:read-only {
    cursor: not-allowed;
    pointer-events: none;
    background-color: rgb(239, 239, 239);
    color: rgb(187, 187, 187);
}

input[type='number']:read-only:focus {
    outline: none;
}

/* input number valid state and invalid state! */

.dialog {
    --bg-color: white;
    max-width: 25rem;
    width: 100%;
    border-radius: 0.5rem;
    scrollbar-width: none; /* Firefox */
}

/* Hide scrollbar for Chrome, Safari and Opera */
.dialog::-webkit-scrollbar {
    display: none;
}

.dialog::backdrop {
    background-color: rgb(0 0 0 / 0.5);
}

.dialog__header,
.dialog__footer {
    --gray: rgb(238, 238, 238);
    --padding-block: 1rem;
    --padding-inline: 1.25rem;
}

.dialog__header {
    color: rgb(170, 170, 170);
    border-bottom: 1px solid var(--gray);
}

.dialog__footer {
    background-color: var(--gray);
}

.dialog__content {
    --padding-inline: 1.25rem;
}

.dialog__content > * {
    padding-bottom: 2.1875rem;
}

.dialog__content > *:where(:not(:last-child)) {
    border-bottom: 1px solid;
}

/* TodoItem component */
.todo {
    --outline-width: 4px;
    outline-offset: calc(var(--outline-width) * -1);
}

.todo:hover {
    outline: 4px solid rgb(200, 200, 200);
}

.todo.focus {
    outline: 4px solid black;
}
